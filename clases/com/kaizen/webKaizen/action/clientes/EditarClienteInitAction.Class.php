<?php/** * Acción para inicializar el contexto para editar * un cliente. * * @author Lucrecia * @since 15-04-2010 * */abstract class EditarClienteInitAction  extends EditarInitAction{	/**	 * (non-PHPdoc)	 * @see clases/com/codnet/action/generic/EditarInitAction#getXTemplate()	 */	protected function getXTemplate(){		return new XTemplate ( APP_PATH. '/clientes/editarcliente.html' );	}	/**	 * (non-PHPdoc)	 * @see clases/com/codnet/action/generic/EditarInitAction#getEntidad()	 */	protected function getEntidad(){		return new Cliente();	}	/**	 * (non-PHPdoc)	 * @see clases/com/codnet/action/generic/EditarInitAction#parseEntidad($entidad, $xtpl)	 */	protected function parseEntidad($entidad, XTemplate $xtpl){		$oCliente = FormatUtils::ifEmpty($entidad, new Cliente());		//se muestra el cliente.                               		$this->parseCliente( $oCliente , $xtpl);		$this->parseTiposdocs( $oCliente->getCd_tipodoc(), $xtpl);		$this->parseComollego( $oCliente->getCd_comollego(), $xtpl);		$this->parseEstadosciviles( $oCliente->getCd_estadocivil(), $xtpl);		$this->parseCondsiva( $oCliente->getCd_condiva(), $xtpl);		$this->parsePaises( $oCliente->getProvincia()->getCd_pais(), $xtpl );		$this->parseProvincias( $oCliente->getProvincia()->getCd_pais(), $oCliente->getProvincia()->getCd_provincia(), $xtpl );		$this->parseLocalidades($oCliente->getProvincia()->getCd_provincia(), $oCliente->getLocalidad()->getCd_localidad(), $xtpl );	}	protected function parseCliente(Cliente $oCliente, XTemplate $xtpl){		//se muestra el cliente.		$xtpl->assign ( 'cd_cliente',$oCliente->getCd_cliente());		$xtpl->assign ( 'ds_apynom', stripslashes ( $oCliente->getDs_apynom () ));		$xtpl->assign ( 'nu_doc', stripslashes ( $oCliente->getNu_doc () ) );		$xtpl->assign ( 'dt_nacimiento', stripslashes ( $oCliente->getDt_nacimiento () ) );		$xtpl->assign ( 'ds_cuit', stripslashes ( $oCliente->getDs_cuil_cuit () ) );		$estadocivil_id = stripslashes ( $oCliente->getCd_estadocivil () );		if($estadocivil_id == CASADO || $estadocivil_id == CONCUBINO){			$xtpl->assign ( 'ds_conyuge', htmlentities(stripslashes ( $oCliente->getDs_conyuge () )) );			$xtpl->parse ( 'main.nombre_conyuge' );		}		$xtpl->assign ( 'ds_nacionalidad', stripslashes ( $oCliente->getDs_nacionalidad () ) );		$xtpl->assign ( 'ds_cp', stripslashes ( $oCliente->getDs_cp () ) );		$xtpl->assign ( 'ds_teparticular', stripslashes ( $oCliente->getDs_teparticular() ) );		$xtpl->assign ( 'ds_telaboral', stripslashes ( $oCliente->getDs_telaboral () ) );                $xtpl->assign ( 'ds_email', stripslashes ( $oCliente->getDs_email () ) );         		$xtpl->assign ( 'ds_actividad_ocupacion', stripslashes ( $oCliente->getDs_actividad_ocupacion() ) );		$xtpl->assign ( 'ds_lugartrabajo', stripslashes ( $oCliente->getDs_lugartrabajo() ) );		$xtpl->assign ( 'ds_cuil_cuit', stripslashes ( $oCliente->getDs_cuil_cuit() ) );		$xtpl->assign ( 'ds_comollego', stripslashes ( $oCliente->getDs_comollego() ) );		$xtpl->assign ( 'ds_dircalle', stripslashes ( $oCliente->getDs_dircalle() ) );		$xtpl->assign ( 'ds_dirnro', stripslashes ( $oCliente->getDs_dirnro() ) );		$xtpl->assign ( 'ds_dirpiso', stripslashes ( $oCliente->getDs_dirpiso() ) );		$xtpl->assign ( 'ds_dirdepto', stripslashes ( $oCliente->getDs_dirdepto() ) );	}	protected function parseTiposdocs($cd_selected='', XTemplate $xtpl){		$tipodocManager = new TipodocManager();		$criterio = new CriterioBusqueda();		$tiposdocs = $tipodocManager->getTiposdocs($criterio);		foreach($tiposdocs as $key => $tipodoc) {			$xtpl->assign ( 'ds_tipodoc', $tipodoc->getDs_tipodoc() );			$xtpl->assign ( 'cd_tipodoc', FormatUtils::selected($tipodoc->getCd_tipodoc(), $cd_selected)  );			$xtpl->parse ( 'main.option_tipodoc' );		}	}	protected function parseComollego($cd_selected='', XTemplate $xtpl){		$comollegoManager = new ComollegoManager();		$criterio = new CriterioBusqueda();		$comollego = $comollegoManager->getComollego($criterio);		foreach($comollego as $key => $alternativa) {			$xtpl->assign ( 'ds_comollego', $alternativa->getDs_comollego() );			$xtpl->assign ( 'cd_comollego', FormatUtils::selected($alternativa->getCd_comollego(), $cd_selected)  );			$xtpl->parse ( 'main.option_comollego' );		}	}	protected function parseEstadosciviles($cd_selected='', XTemplate $xtpl){		$estadocivilManager = new EstadocivilManager();		$criterio = new CriterioBusqueda();		$estadosciviles = $estadocivilManager->getEstadosciviles($criterio);		foreach($estadosciviles as $key => $estadocivil) {			$xtpl->assign ( 'ds_estadocivil', $estadocivil->getDs_estadocivil() );			$xtpl->assign ( 'cd_estadocivil', FormatUtils::selected($estadocivil->getCd_estadocivil(), $cd_selected));			$xtpl->parse ( 'main.option_estadocivil' );		}	}	protected function parseCondsiva($cd_selected='', XTemplate $xtpl){		$condivaManager = new CondivaManager();		$criterio = new CriterioBusqueda();		$condicionesiva = $condivaManager->getCondsiva($criterio);		foreach($condicionesiva as $key => $condiva) {			$xtpl->assign ( 'ds_condiva', $condiva->getDs_condiva() );			$xtpl->assign ( 'cd_condiva', FormatUtils::selected($condiva->getCd_condiva(), $cd_selected));			$xtpl->parse ( 'main.option_condiva' );		}	}	protected function parsePaises($cd_selected='', XTemplate $xtpl){		//recupera y parsea países.		$localizacionManager = new LocalizacionManager();		$paises = $localizacionManager->getPaises();		foreach($paises as $key => $pais) {			$xtpl->assign ( 'ds_pais', $pais->getDs_pais() );			$xtpl->assign ( 'cd_pais', FormatUtils::selected($pais->getCd_pais(), $cd_selected)  );			$xtpl->parse ( 'main.option_pais' );		}	}	protected function parseProvincias($cd_pais, $cd_selected='', XTemplate $xtpl){		//recupera y parsea provincias.		$localizacionManager = new LocalizacionManager();		$cd_pais= FormatUtils::ifEmpty( $cd_pais, 0);		$provincias = $localizacionManager->getProvinciasPorPais($cd_pais);		foreach($provincias as $key => $provincia) {			$xtpl->assign ( 'ds_provincia', $provincia->getDs_provincia() );			$xtpl->assign ( 'cd_provincia', FormatUtils::selected($provincia->getCd_provincia(), $cd_selected)  );			$xtpl->parse ( 'main.option_provincia' );		}	}	protected function parseLocalidades($cd_provincia, $cd_selected='', XTemplate $xtpl){		//recupera y parsea localidades.		$localizacionManager = new LocalizacionManager();		$cd_provincia= FormatUtils::ifEmpty( $cd_provincia, 0);		$localidades = $localizacionManager->getLocalidadesPorProvincia($cd_provincia);		foreach($localidades as $key => $localidad) {			$xtpl->assign ( 'ds_localidad', $localidad->getDs_localidad() );			$xtpl->assign ( 'cd_localidad', FormatUtils::selected($localidad->getCd_localidad(), $cd_selected)  );			$xtpl->parse ( 'main.option_localidad' );		}	}}