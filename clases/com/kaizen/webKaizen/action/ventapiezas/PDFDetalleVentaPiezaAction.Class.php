<?php/** * Acción para exportar a pdf un movimiento * * @author lucrecia * @since 25-02-2011 * */class PDFDetalleVentaPiezaAction extends SecureAction {    protected $columnsWidth;    protected $y_cuadro_destinatario = 15;    protected $y_cuadro_destinatario_salon = 30;    protected $y_cuadro_destinatario_sucursal = 15;    protected $y_cuadro_destinatario_taller = 15;    protected $y_cuadro_logo_remito = 30;    protected function getRemito() {        $cd_ventapieza = FormatUtils::getParam('id', 0);        $manager = new VentaPiezaManager();        $oVentaPieza = $manager->getVentaPiezaPorId($cd_ventapieza);        $piezas = $manager->getVentaPiezaUnidades($cd_ventapieza);        $oVentaPieza->setPiezas($piezas);        return $oVentaPieza;    }    protected function getTitle() {        return 'Formulario';    }    /**     * (non-PHPdoc)     * @see clases/com/codnet/action/generic/SecureAction#executeImpl()     */    public function executeImpl() {        //tipo de la copia del remito.        $tipo = FormatUtils::getParam('tipo', 0);        $oVentaPieza = $this->getRemito();        $pdfConcat = new PDFConcat();        $tipoCopiaTexto = "";        $pdf = $this->generarCopia($oVentaPieza, $tipoCopiaTexto);        $pdf->Ln();        $separador = "-   -   -   -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    ";        $separador .= "-   -   -   -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -    -";        $pdf->Cell(190, 20, $separador, 0, 0, 'C');        $pdf->Ln();        $y = $pdf->GetY();        $pdf->SetXY($pdf->lMargin, $y);        $pdf = $this->generarCopia($oVentaPieza, $tipoCopiaTexto, $pdf);        $pdf->Output($tipoCopiaTexto . ".pdf");        $pdfConcat->addFile($tipoCopiaTexto . ".pdf");        $pdfConcat->concat();        $pdfConcat->SetTitle($this->getPDFTitle($oVentaPieza));        $pdfConcat->Output($this->getPDFTitle($oVentaPieza) . ".pdf", "D");        //para que no haga el forward.        $forward = null;        return $forward;    }    public function getPDFTitle($oVentaPieza) {        return "Venta Pieza Nro " . $oVentaPieza->getCd_ventapieza();    }    /**     * genera una copia de pdf     *     * @param  $tipoCopiaTexto     */    public function generarCopia($oVentaPieza, $tipoCopiaTexto='ORIGINAL', $manejador_pdf = null) {        //armamos el pdf.        if ($manejador_pdf == null) {            $pdf = $this->getPDFPrint($oVentaPieza);            $pdf->setTipoCopia($tipoCopiaTexto);            $pdf->SetAutoPageBreak(true, 35);            $pdf->title = $this->getTitle();            $pdf->SetFont('Arial', '', 10);            $pdf->AddPage();            $maxWidth = ($pdf->w) - $pdf->lMargin - $pdf->rMargin;            $y_comienzo = $pdf->tMargin;        } else {            $pdf = $manejador_pdf;            $y_comienzo = $pdf->y;        }        //primero dibujamos el "template" del remito (líneas, cuadros, etc).        $y_encabezado = $this->dibujarEncabezado($pdf, $oVentaPieza, $y_comienzo, $maxWidth);        $y_encabezado_y = $this->parseEncabezado($pdf, $oVentaPieza, $y_comienzo, $maxWidth);        $y_encabezado_renglones = $this->dibujarEncabezadoRenglones($pdf, $y_encabezado, $maxWidth);        //llenamos el pdf con la  info del remito.        $pdf->SetX(10);        $y_renglones = $this->parseRenglones($pdf, $oVentaPieza, $y_encabezado_renglones, $maxWidth);        $total = $this->parsetotal($oVentaPieza);        $this->parseNroReparacionYTotal($pdf, $oVentaPieza, $total, $y_renglones);        return $pdf;    }    public function getPDFPrint($oMovimiento) {        return new PDFPrintVentaPieza();    }    public function getFuncion() {        return 'Imprimir Venta Pieza';    }    /**     * dibuja el encabezado del remito     * @param $pdf     * @return $y de lo último dibujado.     */    public function dibujarEncabezado(PDFPrint $pdf, VentaPieza $oVentaPieza, $y, $maxWidth) {        //cuadro logo + info remito.        $pdf->y = $y;        $pdf->SetLineWidth(.4);        $pdf->Cell($maxWidth, $this->y_cuadro_logo_remito, '', 1, 0, 'C');        //$pdf->Cell($maxWidth/2, $this->y_cuadro_logo_remito, '' ,1,0,'C');        $pdf->Ln();        //cuadro info destinatario        $pdf->y = $this->dibujarCuadroInfoDestinatario($pdf, $oVentaPieza, $pdf->y, $maxWidth);        return $pdf->y;    }    protected function dibujarCuadroInfoDestinatario(PDFPrint $pdf, VentaPieza $oVentaPieza, $y, $maxWidth) {        $pdf->y = $y;        $pdf->SetLineWidth(.4);        $nu_destino = $oVentaPieza->getNu_destino();        switch ($nu_destino) {            case 1:                $ds_destino = "Salón";                $pdf->Cell($maxWidth, $this->y_cuadro_destinatario_salon, '', 1, 1, 'C');                break;            case 2:                $ds_destino = "Sucursal";                $pdf->Cell($maxWidth, $this->y_cuadro_destinatario_sucursal, '', 1, 1, 'C');                break;            case 3:                $ds_destino = "Taller";                $pdf->Cell($maxWidth, $this->y_cuadro_destinatario_taller, '', 1, 1, 'C');                break;        }        //$pdf->Ln();        $pdf->SetLineWidth(.1);        return $pdf->y;    }    public function dibujarEncabezadoRenglones(PDFPrint $pdf, $y, $maxWidth) {        $pdf->y = $y;        $pdf->SetLineWidth(.4);        $this->columnsWidth = array(25, ($maxWidth) - 95, 35, 35);        $columns = array('Código', 'Pieza', 'Suc. Origen','Cant. Pedida', 'Monto a Cobrar');        $pdf->SetFillColor(218, 218, 218);        $pdf->SetX(10);        $pdf->Cell(25, 8, $columns[0], 1, 0, 'C', 1);        $pdf->Cell(70, 8, $columns[1], 1, 0, 'C', 1);        $pdf->Cell(45, 8, $columns[2], 1, 0, 'C', 1);        $pdf->Cell(25, 8, $columns[3], 1, 0, 'C', 1);        $pdf->Cell(25, 8, $columns[4], 1, 1, 'C', 1);        //$pdf->Ln();        return $pdf->y;    }    protected function parseLogo(PDFPrint $pdf, VentaPieza $oVentaPieza, $y, $maxWidth) {        //IMAGEN KAIZEN.        $pdf->y = $y;        $pdf->Cell($maxWidth, $this->y_cuadro_logo_remito, '', 0, 0, 'C');        $pdf->Image(APP_PATH . 'img/logo_pieza_izq.jpg', $pdf->rMargin+2, $pdf->y + 2, 100, 25);        $pdf->Image(APP_PATH . 'img/logo_pieza_der.jpg', $pdf->rMargin+105, $pdf->y + 4, 80, 7);        $pdf->SetFontSize(10);        $pdf->Ln(14);        $pdf->Cell(110, 7, '', '', 0, 'L');       	$pdf->Cell(70, 7, 'N 0001 - '.str_pad($oVentaPieza->getCd_ventapieza(),8,'0',STR_PAD_LEFT), '', 0, 'L');        $pdf->Ln(8);        $pdf->Cell(180, 7, $oVentaPieza->getDt_ventapieza(), '', 0, 'R');        return $pdf->y;    }    protected function parseInfoRemito(PDFPrint $pdf, VentaPieza $oVentaPieza, $y, $maxWidth) {        //IMAGEN        $pdf->y = $y;        $pdf->SetFontSize(8);        $pdf->Cell($maxWidth / 2 + 20, 10, '', 0, 0, 'L');        /*$pdf->Cell(12, 7, 'Fecha ', 1, 0, 'L');        $pdf->Cell(17, 7, $oVentaPieza->getDt_ventapieza(), 1, 0, 'L');*/        $pdf->Cell(12, 7, '', 1, 0, 'L');        $pdf->Cell(17, 7, '', 1, 0, 'L');        $pdf->Ln();        $pdf->SetFontSize(7);        $pdf->Cell($maxWidth, 2, '', 0, 0, 'C');        $pdf->Ln();        $pdf->Cell($maxWidth / 2, 5, $oVentaPieza->getSucursal()->getDs_nombre(), 0, 0, 'C');        $pdf->Cell(20, 5, '', 0, 0, 'C');        $pdf->Cell(12, 4, "", 0, 0, 'L');        $pdf->Ln();        $pdf->Cell($maxWidth / 2, 5, $oVentaPieza->getSucursal()->getDs_nombre(), 0, 0, 'C');        $pdf->Cell(20, 5, '', 0, 0, 'C');        $pdf->Cell(12, 4, "", 0, 0, 'L');        $pdf->Ln();        $pdf->Cell($maxWidth / 2, 5, '', 0, 0, 'C');        $pdf->Cell(20, 5, '', 0, 0, 'C');        $pdf->Cell(12, 4, "", 0, 0, 'L');        $pdf->Ln();        $pdf->SetFontSize(5);        $pdf->Cell($maxWidth / 2, 5, '', 0, 0, 'C');        $pdf->Cell(20, 5, '', 0, 0, 'C');        $pdf->SetFontSize(7);        $pdf->Cell(12, 4, "", 0, 0, 'L');        $pdf->Ln();        return $pdf->y;    }    protected function parseInfoTituloRemito(PDFPrint $pdf, VentaPieza $oVentaPieza, $y, $maxWidth) {        //IMAGEN KAIZEN.        $pdf->y = $y;        $pdf->SetFontSize(12);        $pdf->SetLineWidth(.1);        $pdf->Cell(20, 7, '', 0, 0, 'L');        $pdf->Cell(20, 7, '', 0, 0, 'L');        $pdf->SetFontSize(5);        $pdf->Cell(40, 7, '', 0, 0, 'L');        $pdf->Ln();        $pdf->SetFontSize(12);        $pdf->Cell($maxWidth / 2 + 20, 10, '', 0, 0, 'L');        $pdf->Cell(20, 7, '', 0, 0, 'L');        $pdf->Ln();        return $pdf->y;    }    protected function parseInfoDestinoSalon(PDFPrint $pdf, VentaPieza $oVentaPieza, $y, $maxWidth) {        //IMAGEN KAIZEN.        $pdf->y = $y;        $pdf->SetFontSize(10);        //  $pdf->SetY($this->y_cuadro_logo_remito + $this->y_cuadro_destinatario - 5);        $pdf->SetX(15);        $pdf->Cell(35, 7, 'Apellido y Nombre:', 0, 0, 'L');        $pdf->Cell(110, 7, $oVentaPieza->getDs_apynomCliente(), 0, 0, 'L');        /*$pdf->Cell(15, 7, 'Fecha: ', 0, 0, 'R');        $pdf->Cell(110, 7, $oVentaPieza->getDt_ventapieza(), 0, 0, 'L');*/        $pdf->Cell(15, 7, '', 0, 0, 'R');        $pdf->Cell(110, 7, '', 0, 0, 'L');        $pdf->Ln();        $pdf->SetX(15);        $pdf->Cell(35, 7, 'Moto:', 0, 0, 'L');        $pdf->Cell(110, 7, $oVentaPieza->getDs_motoCliente(), 0, 0, 'L');        $pdf->Cell(15, 7, 'Vendedor: ', 0, 0, 'R');        $pdf->Cell(110, 7, $oVentaPieza->getUsuario()->getDs_nomusuario(), 0, 0, 'L');        $pdf->Ln();        $pdf->SetX(15);        $pdf->Cell(35, 7, 'DNI:', 0, 0, 'L');        $pdf->Cell(110, 7, $oVentaPieza->getNu_docCliente(), 0, 0, 'L');        $pdf->Ln();        $pdf->SetX(15);        $pdf->Cell(35, 7, 'Tel:', 0, 0, 'L');        $pdf->Cell(110, 7, $oVentaPieza->getDs_telCliente(), 0, 0, 'L');        $pdf->Ln();        return $pdf->y;    }    protected function parseInfoDestinoSucursal(PDFPrint $pdf, VentaPieza $oVentaPieza, $y, $maxWidth) {        //IMAGEN KAIZEN.        $pdf->y = $y;        $pdf->SetFontSize(10);        //$pdf->SetY($this->y_cuadro_logo_remito + $this->y_cuadro_destinatario - 5);        $pdf->SetX(15);        $pdf->Cell(20, 7, 'Sucursal:', 0, 0, 'R');        $pdf->Cell(125, 7, $oVentaPieza->getDs_nombre(), 0, 0, 'L');        //Fecha de Venta Pieza        /*$pdf->Cell(15, 7, 'Fecha: ', 0, 0, 'R');        $pdf->Cell(110, 7, $oVentaPieza->getDt_ventapieza(), 0, 0, 'L');*/        $pdf->Cell(15, 7, '', 0, 0, 'R');        $pdf->Cell(110, 7, '', 0, 0, 'L');        $pdf->Ln();        $pdf->Cell(150, 7, '', 0, 0, 'R');        $pdf->Cell(15, 7, 'Vendedor: ', 0, 0, 'R');        $pdf->Cell(110, 7, $oVentaPieza->getUsuario()->getDs_nomusuario(), 0, 0, 'L');        $pdf->Ln();        return $pdf->y;    }    protected function parseInfoDestinoTaller(PDFPrint $pdf, VentaPieza $oVentaPieza, $y, $maxWidth) {        //IMAGEN KAIZEN.        $pdf->y = $y;        $pdf->SetFontSize(10);        // $pdf->SetY($this->y_cuadro_logo_remito + $this->y_cuadro_destinatario - 5);        $pdf->SetX(15);        $pdf->Cell(20, 7, 'Destino:', 0, 0, 'R');        $pdf->Cell(125, 7, 'Taller', 0, 0, 'L');        //Fecha de Venta Pieza        /*$pdf->Cell(15, 7, 'Fecha: ', 0, 0, 'R');        $pdf->Cell(110, 7, $oVentaPieza->getDt_ventapieza(), 0, 0, 'L');*/        $pdf->Cell(15, 7, '', 0, 0, 'R');        $pdf->Cell(110, 7, '', 0, 0, 'L');        $pdf->Ln();        $pdf->Cell(150, 7, '', 0, 0, 'R');        $pdf->Cell(15, 7, 'Vendedor: ', 0, 0, 'R');        $pdf->Cell(110, 7, $oVentaPieza->getUsuario()->getDs_nomusuario(), 0, 0, 'L');        $pdf->Ln();        return $pdf->y;    }    public function parseEncabezado(PDFPrint $pdf, VentaPieza $oVentaPieza, $y, $maxWidth) {        $pdf->y = $y;        //IMAGEN KAIZEN        $this->parseLogo($pdf, $oVentaPieza, $pdf->y, $maxWidth);        $pdf->y = ($y + $this->y_cuadro_logo_remito) - ($pdf->tMargin + 2);        //INFO DEL REMITO.        $this->parseInfoTituloRemito($pdf, $oVentaPieza, $pdf->y, $maxWidth);        //DATOS DEL DESTINATARIO.        //Dependerá del destino        $nu_destino = $oVentaPieza->getNu_destino();        switch ($nu_destino) {            case 1:                $ds_destino = "Salón";                $pdf->y = $this->parseInfoDestinoSalon($pdf, $oVentaPieza, $pdf->y, $maxWidth);                break;            case 2:                $ds_destino = "Sucursal";                $pdf->SetY($this->parseInfoDestinoSucursal($pdf, $oVentaPieza, $pdf->y, $maxWidth));                break;            case 3:                $ds_destino = "Taller";                $pdf->SetY($this->parseInfoDestinoTaller($pdf, $oVentaPieza, $pdf->y, $maxWidth));                break;        }        $pdf->Cell(20, 10, '', 0, 1, 'L');        return $pdf->y;    }    public function parseRenglones(PDFPrint $pdf, VentaPieza $oVentaPieza, $y, $maxWidth) {        $pdf->y = $y;        //$pdf->SetX(0);        $this->columnsWidth = array(25, ($maxWidth) - 95, 35, 35);        $pdf->SetFontSize(8);        //DETALLES DEL REMITO.        foreach ($oVentaPieza->getPiezas() as $key => $oPiezaUnidad) {            $pdf->Cell(25, 8, $oPiezaUnidad->getPieza()->getDs_codigo(), 1, 0, 'C');            $pdf->Cell(70, 8, $oPiezaUnidad->getPieza()->getDs_descripcion(), 1, 0, 'L');            $managerSucursal = new SucursalManager();			$oSucursal = $managerSucursal->getSucursalPorId( $oPiezaUnidad->getSucursal()->getCd_sucursal() );			$pdf->Cell(45, 8, $oSucursal->getDs_nombre(), 1, 0, 'L');            $pdf->Cell(25, 8, $oPiezaUnidad->getPieza()->getNu_cantidadpedida(), 1, 0, 'C');            $pdf->Cell(25, 8, "$" . $oPiezaUnidad->getPieza()->getQt_montoacobrar(), 1, 1, 'C');        }        return $pdf->y;    }    public function parseTotal(VentaPieza $oVentaPieza) {        $total = 0;        foreach ($oVentaPieza->getPiezas() as $key => $oPiezaUnidad)            $total = $total + $oPiezaUnidad->getPieza()->getQt_montoacobrar();        return $total;    }    public function parseNroReparacionYTotal(PDFPrint $pdf, VentaPieza $oVentaPieza, $total, $y) {        $pdf->SetY($y + 5);        $pdf->SetX(20);        $nu_destino = $oVentaPieza->getNu_destino();        switch ($nu_destino) {            case 1:                $ds_destino = "Salón";                $pdf->Cell(160, 7, 'Total: ', 0, 0, 'R');                $pdf->Cell(110, 7, "$" . $total, 0, 0, 'L');                break;            case 2:                $ds_destino = "Sucursal";                $pdf->Cell(20, 7, 'Nro. de Reparación:', 0, 0, 'R');                $pdf->Cell(130, 7, $oVentaPieza->getNu_pedidoreparacion(), 0, 0, 'L');                $pdf->Cell(15, 7, 'Total: ', 0, 0, 'R');                $pdf->Cell(110, 7, "$" . $total, 0, 0, 'L');                break;            case 3:                $ds_destino = "Taller";                $pdf->Cell(20, 7, 'Nro. de Reparación:', 0, 0, 'R');                $pdf->Cell(130, 7, $oVentaPieza->getNu_pedidoreparacion(), 0, 0, 'L');                $pdf->Cell(15, 7, 'Total: ', 0, 0, 'R');                $pdf->Cell(110, 7, "$" . $total, 0, 0, 'L');                break;        }        if ($oVentaPieza->getDs_descripcion() != "") {            $pdf->Ln();            $pdf->SetFont('ARIAL', 'B');            $pdf->Cell(20, 7, 'Descripción:', 0, 0, 'R');            $pdf->Ln();            $pdf->SetFont('ARIAL', '');            $pdf->MultiCell(190, 7, $oVentaPieza->getDs_descripcion());        }    }}