<?phpclass UsuarioKaizenQuery {    static function getUsuarioConPerfilPorNombreYPass(UsuarioKaizen $user) {        $db = DbManager::getConnection();        $ds_nomusuario = $user->getDs_nomusuario();        $ds_password = MD5($user->getDs_password());        $sql = "SELECT U.cd_usuario, U.ds_nomusuario, U.cd_perfil, U.ds_apynom, U.ds_mail, U.ds_password, P.ds_perfil FROM usuario U";        $sql .= " LEFT JOIN perfil P ON(P.cd_perfil=U.cd_perfil)  ";        $sql .= " WHERE ds_nomusuario ='$ds_nomusuario' AND ds_password = '$ds_password'";        $result = $db->sql_query($sql);        if (!$result)//hubo un error en la bbdd.            throw new DBException($db->sql_error());        if ($db->sql_numrows() > 0) {            $temp = $db->sql_fetchassoc($result);            $factory = new UsuarioKaizenFactory();            $obj = $factory->build($temp);        } else {            throw new UsuarioNoValidoException();        }        $db->sql_freeresult($result);        return ($obj);    }    static function insertUsuario(UsuarioKaizen $obj) {        $db = DbManager::getConnection();        $ds_nomusuario = $obj->getDs_nomusuario();        if (!UsuarioKaizenQuery::existeNombreUsuario($obj, $db)) {            $ds_password = MD5($obj->getDs_password());            $cd_perfil = $obj->getCd_perfil();            $ds_mail = $obj->getDs_mail();            $ds_apynom = $obj->getDs_apynom();            $cd_sucursal = $obj->getCd_sucursal();                        $bl_activo = $obj->getBl_activo();            $sql = "INSERT INTO usuario (ds_nomusuario ,ds_password ,cd_perfil, ds_apynom, ds_mail, cd_sucursal, bl_activo) VALUES ('$ds_nomusuario' ,'$ds_password' ,'$cd_perfil', '$ds_apynom', '$ds_mail', '$cd_sucursal', '$bl_activo') ";            $result = $db->sql_query($sql);            if (!$result)//hubo un error en la bbdd.                throw new DBException($db->sql_error());        } else {            throw new UsuarioNoValidoException();        }        $db->sql_freeresult($res);    }    static function getUsuariosConPerfil(CriterioBusqueda $criterio) {        $db = DbManager::getConnection();        $sql = "SELECT U.cd_usuario, U.ds_nomusuario, P.cd_perfil, P.ds_perfil, U.ds_apynom, U.ds_mail, U.bl_activo, S.ds_nombre FROM usuario U";        $sql .= " LEFT JOIN perfil P ON(P.cd_perfil=U.cd_perfil) ";        $sql .= " LEFT JOIN sucursal S ON(S.cd_sucursal=U.cd_sucursal) ";        $sql .= $criterio->buildFiltro();              $result = $db->sql_query($sql);        if (!$result)//hubo un error en la bbdd.            throw new DBException($db->sql_error());        $usuarios = ResultFactory::toCollection($db, $result, new UsuarioKaizenFactory());                $db->sql_freeresult($res);        return ($usuarios);    }    static function eliminarUsuario(UsuarioKaizen $obj) {        $db = DbManager::getConnection();        $cd_usuario = $obj->getCd_usuario();        $sql = "DELETE FROM usuario WHERE cd_usuario = $cd_usuario";        $result = $db->sql_query($sql);        if (!$result)//hubo un error en la bbdd.            throw new DBException($db->sql_error());    }    static function getUsuarioPorId(UsuarioKaizen $obj) {        $db = DbManager::getConnection();        $cd_usuario = $obj->getCd_usuario();        $sql = "SELECT U.ds_nomusuario, U.cd_perfil, U.cd_usuario, U.ds_apynom, U.ds_mail, U.ds_password, U.bl_activo, S.* FROM usuario U";        $sql .= " LEFT JOIN sucursal S ON(S.cd_sucursal=U.cd_sucursal)  ";        $sql .= " WHERE U.cd_usuario = $cd_usuario";        $result = $db->sql_query($sql);        if (!$result)//hubo un error en la bbdd.            throw new DBException($db->sql_error());        if ($db->sql_numrows() > 0) {            $temp = $db->sql_fetchassoc($result);            $factory = new UsuarioKaizenFactory();            $obj = $factory->build($temp);        }        $db->sql_freeresult($result);        return ($obj);    }    static function getUsuarioConPerfilPorId(Usuario $obj) {        $db = DbManager::getConnection();        $cd_usuario = $obj->getCd_usuario();        $sql = "SELECT U.cd_usuario, U.ds_nomusuario, U.cd_perfil, U.ds_apynom, U.ds_mail, U.ds_password, U.bl_activo, P.ds_perfil, S.ds_nombre FROM usuario U";        $sql .= " LEFT JOIN perfil P ON(P.cd_perfil=U.cd_perfil)  ";        $sql .= " LEFT JOIN sucursal S ON(S.cd_sucursal=U.cd_sucursal)  ";        $sql .= " WHERE U.cd_usuario = $cd_usuario";        $result = $db->sql_query($sql);        if (!$result)//hubo un error en la bbdd.            throw new DBException($db->sql_error());        if ($db->sql_numrows() > 0) {            $temp = $db->sql_fetchassoc($result);            $factory = new UsuarioKaizenFactory();            $obj = $factory->build($temp);        }        $db->sql_freeresult($result);        return ($obj);    }    static function modificarUsuario(UsuarioKaizen $obj) {        $db = DbManager::getConnection();        $cd_usuario = $obj->getCd_usuario();        $ds_nomusuario = $obj->getDs_nomusuario();        $cd_perfil = $obj->getCd_perfil();        $ds_mail = $obj->getDs_mail();        $ds_apynom = $obj->getDs_apynom();        $cd_sucursal = $obj->getCd_sucursal();		$bl_activo = $obj->getBl_activo();        $sql = "UPDATE usuario SET ds_nomusuario='$ds_nomusuario',cd_perfil=$cd_perfil,ds_apynom='$ds_apynom', ds_mail= '$ds_mail', cd_sucursal= '$cd_sucursal', bl_activo= '$bl_activo'";        if ($obj->getDs_password() != "") {            $ds_password = MD5($obj->getDs_password());            $sql .= ", ds_password = '$ds_password'";        }        $sql .= " WHERE cd_usuario = $cd_usuario";        $result = $db->sql_query($sql);        if (!$result)//hubo un error en la bbdd.            throw new DBException($db->sql_error());    }    static function existeNombreUsuario(UsuarioKaizen $user, $db) {        $ds_nomusuario = $user->getDs_nomusuario();        $sql = "Select count(*) as count FROM usuario WHERE ds_nomusuario ='$ds_nomusuario'";        $result = $db->sql_query($sql);        if (!$result)//hubo un error en la bbdd.            throw new DBException($db->sql_error());        $next = $db->sql_fetchassoc($result);        $cant = $next['count'];        $db->sql_freeresult($res);        return ($cant > 0);    }    static function estaAsignadoAPerfil(UsuarioKaizen $obj) {        $db = DbManager::getConnection();        $cd_perfil = $obj->getCd_perfil();        $sql = "Select count(*) as count FROM usuario WHERE cd_perfil ='$cd_perfil'";        $result = $db->sql_query($sql);        if (!$result)//hubo un error en la bbdd.            throw new DBException($db->sql_error());        $next = $db->sql_fetchassoc($result);        $cant = $next['count'];        $db->sql_freeresult($res);        return ($cant > 0);    }            static function getCantUsuarios( CriterioBusqueda $criterio ) {		$db = DbManager::getConnection();		$sql = "SELECT count(*) as count FROM usuario U";		$sql .= $criterio->buildFiltroSinPaginar();		$result = $db->sql_query ( $sql );		if(!$result)//hubo un error en la bbdd.			throw new DBException($db->sql_error());		$next = $db->sql_fetchassoc ( $result );		$cant = $next['count'];		$db->sql_freeresult($res);		return (( int ) $cant);	}}?>