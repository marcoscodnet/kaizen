<?php/** *  * @author bernardo * @since 14-03-2010 *  * Manejador de l�gica de negocio para usuarios. * */class UsuarioKaizenManager implements IListar {    public function agregarUsuario($oUsuario) {        UsuarioKaizenQuery::insertUsuario($oUsuario);    }    public function modificarUsuario($oUsuario) {        if ($oUsuario->getBl_resetearclave() == 'true') {            $clave_reseteada = $oUsuario->getDs_nomusuario();            $oUsuario->setDs_password($clave_reseteada);        }        UsuarioKaizenQuery::modificarUsuario($oUsuario);    }    public function eliminarUsuario($cd_usuario) {        $oUsuario = new UsuarioKaizen();        $oUsuario->setCd_usuario($cd_usuario);        UsuarioKaizenQuery::eliminarUsuario($oUsuario);    }    public function getUsuarios(CriterioBusqueda $criterio) {        $usuarios = UsuarioKaizenQuery::getUsuariosConPerfil($criterio);        return $usuarios;    }    public function getVendedores(CriterioBusqueda $criterio) {     //   $criterio->addFiltro("P.cd_perfil", "'".CD_PERFIL_VENDEDOR."'", "=");        $usuarios = UsuarioKaizenQuery::getUsuariosConPerfil($criterio);        return $usuarios;    }    public function getUsuarioPorId($cd_usuario) {        $oUsuario = new UsuarioKaizen();        $oUsuario->setCd_usuario($cd_usuario);        $oUsuario = UsuarioKaizenQuery::getUsuarioPorId($oUsuario);        return $oUsuario;    }    /**     * obtiene un usuario espec�fico junto con su perfil dado un identificador.     * @param $cd_usuario identificador del usuario a recuperar     * @return usuario con perfil asociado.     */    public function getUsuarioConPerfilPorId($cd_usuario) {        $oUsuario = new Usuario ();        $oUsuario->setCd_usuario($cd_usuario);        $oUsuario = UsuarioKaizenQuery::getUsuarioConPerfilPorId($oUsuario);        return $oUsuario;    }    /**     * obtiene la cantidad de usuarios dado un filtro.     * @param $filtro filtro de b�squeda.     * @return cantidad de usuarios     */    public function getCantidadUsuarios(CriterioBusqueda $criterio) {        return UsuarioKaizenQuery::getCantUsuarios($criterio);    }    public function cambiarClave($cd_usuario, $clave_actual, $clave_nueva) {        $clave_actual = MD5($clave_actual);        $oUsuario = $this->getUsuarioPorId($cd_usuario);        $pass = $oUsuario->getDs_password();        if (strcmp($clave_actual, $pass) == 0) {            $oUsuario->setDs_password($clave_nueva);            UsuarioQuery::modificarUsuario($oUsuario);        } else {            throw new PasswordIncorrectaException();        }    }    public function login($nombre_usuario, $clave) {        //construimos el usuario.        $oUsuario = new Usuario($nombre_usuario, $clave);        //buscamos el usuario.        $oUsuario = UsuariKaizenoQuery::getUsuarioConPerfilPorNombreYPass($oUsuario);        //buscamos las funciones que puede realizar el usuario.        $oUsuario->setFunciones(FuncionQuery::getFuncionesDeUsuario($oUsuario));        //iniciamos la sesi�n.        $oUsuario->iniciarSesion();    }    //INTERFACE IListar.    function getEntidades(CriterioBusqueda $criterio) {        return $this->getUsuarios($criterio);    }    function getCantidadEntidades(CriterioBusqueda $criterio) {        return $this->getCantidadUsuarios($criterio);    }}